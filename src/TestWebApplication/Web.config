<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=301880
  -->
<configuration>
  <configSections>
    <section name="system.identityModel" type="System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
    <section name="system.identityModel.services" type="System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
  </configSections>
  
  <appSettings>
    <add key="webpages:Version" value="3.0.0.0"/>
    <add key="webpages:Enabled" value="false"/>
    <add key="ClientValidationEnabled" value="true"/>
    <add key="UnobtrusiveJavaScriptEnabled" value="true"/>
  </appSettings>
  <system.web>
    <compilation debug="true" targetFramework="4.6"/>
    <httpRuntime targetFramework="4.6"/>
    <!-- Noone is authorized because we use WIF to handle Auth -->
    <authorization>
      <deny users="?" />
    </authorization>
    <authentication mode="None" />
  </system.web>

  <!-- This section add the WIF auth module to the pipeline 
   this module is the one that redirect the user to the STS to get the token.
   Whitout this module the user is not redirected and get access denied (as we disabled any other access type)
   it uses the WIF configuration belowe
  -->
  <system.webServer>
    <handlers accessPolicy="Read, Execute, Script" />
    <modules runAllManagedModulesForAllRequests="true">
      <add name="WsFederationAuthenticationModule" type="System.IdentityModel.Services.WSFederationAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      <add name="SessionAuthenticationModule" type="System.IdentityModel.Services.SessionAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" preCondition="managedHandler" />
    </modules>
  </system.webServer>


  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35"/>
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35"/>
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35"/>
        <bindingRedirect oldVersion="1.0.0.0-5.2.3.0" newVersion="5.2.3.0"/>
      </dependentAssembly>
    </assemblyBinding>
  </runtime>

  <!-- WIF CONFIG -->
  <system.identityModel>
    <!-- because this website needs to access a backend service acting as the caller, we tell WIF to save the bootstratp token that is just the regular token we are used to 
    We need to present this token to the STS when we want to ActAs the original caller.
    Whitout this flag the token is discarded as soon as it is consumed by WIF (WIF create a session cookie that does not contain the original token)
    -->
    <identityConfiguration saveBootstrapContext="true">
      <securityTokenHandlers>
        <securityTokenHandlerConfiguration saveBootstrapContext="true" />
      </securityTokenHandlers>
      <audienceUris>
        <add value="http://testWebApplication.gianlucb.local" />
      </audienceUris>
      <issuerNameRegistry type="System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <trustedIssuers>
          <add thumbprint="9b91b18206a805896b19c4ffd20a487db025d321" name="signing certificate sts" />
        </trustedIssuers>
      </issuerNameRegistry>
      <certificateValidation certificateValidationMode="None" />
    </identityConfiguration>
  </system.identityModel>
  <!-- this is the passive configuration, where we tell to the browser where to get the token from -->
  <system.identityModel.services>
    <federationConfiguration>
      <!-- ISSUER = the address of the ADFS server, generic login page -->
      <!-- REALM = the unique name of the Relying party specified in the ADFS server -> Relying party identifiers (it can be a fantasy URL, not existing) -->
      <!-- in the ADFS server we need to add the address  where the client is redirected after a valid login, this is called "WS-Federation Passive Endpoint" -->
      <!-- if you run this website form visual studio it will listen on a different port for SSL (44388), so set https://localhost:44388 in ADFS RP config -->
      <wsFederation persistentCookiesOnPassiveRedirects="true" passiveRedirectEnabled="true" issuer="https://sts.gianlucb.local/adfs/ls" realm="http://testWebApplication.gianlucb.local" requireHttps="false" />
      <cookieHandler requireSsl="false" path="/" />
    </federationConfiguration>
  </system.identityModel.services>

</configuration>
